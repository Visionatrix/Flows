{
  "openapi": "3.1.0",
  "info": {
    "title": "visionatrix",
    "version": "1.12.0.dev0"
  },
  "paths": {
    "/vapi/tasks/create/proteus_xl": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Proteus Xl",
        "operationId": "run_proteus_xl",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_proteus_xl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/pixart_e": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Pixart E",
        "operationId": "run_pixart_e",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_pixart_e"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/animal_clothing": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Animal Clothing",
        "operationId": "run_animal_clothing",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_animal_clothing"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/photomaker_1": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Photomaker 1",
        "operationId": "run_photomaker_1",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_photomaker_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/sdxl_lighting": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Sdxl Lighting",
        "operationId": "run_sdxl_lighting",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_sdxl_lighting"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/animagine_xl": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Animagine Xl",
        "operationId": "run_animagine_xl",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_animagine_xl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/comicu_portrait": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Comicu Portrait",
        "operationId": "run_comicu_portrait",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_comicu_portrait"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/supir_upscaler": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Supir Upscaler",
        "operationId": "run_supir_upscaler",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_supir_upscaler"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/flux1_extend": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Flux1 Extend",
        "operationId": "run_flux1_extend",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_flux1_extend"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/mobius_xl": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Mobius Xl",
        "operationId": "run_mobius_xl",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_mobius_xl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/remove_background_birefnet_lite": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Remove Background Birefnet Lite",
        "operationId": "run_remove_background_birefnet_lite",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_remove_background_birefnet_lite"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/pencil_sketch_portrait": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Pencil Sketch Portrait",
        "operationId": "run_pencil_sketch_portrait",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_pencil_sketch_portrait"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/surprise_me_internal": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Surprise Me Internal",
        "operationId": "run_surprise_me_internal",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_surprise_me_internal"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/juggernaut_xl": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Juggernaut Xl",
        "operationId": "run_juggernaut_xl",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_juggernaut_xl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/flux1_dev_inpaint_8bit": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Flux1 Dev Inpaint 8Bit",
        "operationId": "run_flux1_dev_inpaint_8bit",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_flux1_dev_inpaint_8bit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/all_your_life": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run All Your Life",
        "operationId": "run_all_your_life",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_all_your_life"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/human_face_detailer": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Human Face Detailer",
        "operationId": "run_human_face_detailer",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_human_face_detailer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/remove_background_birefnet": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Remove Background Birefnet",
        "operationId": "run_remove_background_birefnet",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_remove_background_birefnet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/colorful_xl_inpaint": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Colorful Xl Inpaint",
        "operationId": "run_colorful_xl_inpaint",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_colorful_xl_inpaint"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/photomaker_2": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Photomaker 2",
        "operationId": "run_photomaker_2",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_photomaker_2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/colorful_xl": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Colorful Xl",
        "operationId": "run_colorful_xl",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_colorful_xl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/remove_background_bria": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Remove Background Bria",
        "operationId": "run_remove_background_bria",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_remove_background_bria"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/ltxv_txt2video": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Ltxv Txt2Video",
        "operationId": "run_ltxv_txt2video",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_ltxv_txt2video"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/mad_scientist": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Mad Scientist",
        "operationId": "run_mad_scientist",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_mad_scientist"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/vintage_portrait": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Vintage Portrait",
        "operationId": "run_vintage_portrait",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_vintage_portrait"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/sketch_portrait": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Sketch Portrait",
        "operationId": "run_sketch_portrait",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_sketch_portrait"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/flux1_dev": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Flux1 Dev",
        "operationId": "run_flux1_dev",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_flux1_dev"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/photo_stickers2": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Photo Stickers2",
        "operationId": "run_photo_stickers2",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_photo_stickers2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/flux1_dev_inpaint": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Flux1 Dev Inpaint",
        "operationId": "run_flux1_dev_inpaint",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_flux1_dev_inpaint"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/stable_audio_open": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Stable Audio Open",
        "operationId": "run_stable_audio_open",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_stable_audio_open"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/flux1_schnell": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Flux1 Schnell",
        "operationId": "run_flux1_schnell",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_flux1_schnell"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/flux1_schnell_inpaint_8bit": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Flux1 Schnell Inpaint 8Bit",
        "operationId": "run_flux1_schnell_inpaint_8bit",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_flux1_schnell_inpaint_8bit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/flux1_dev_8bit": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Flux1 Dev 8Bit",
        "operationId": "run_flux1_dev_8bit",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_flux1_dev_8bit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/sd3_5_large_8bit": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Sd3 5 Large 8Bit",
        "operationId": "run_sd3_5_large_8bit",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_sd3_5_large_8bit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/realvis_xl": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Realvis Xl",
        "operationId": "run_realvis_xl",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_realvis_xl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/flux1_schnell_8bit": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Flux1 Schnell 8Bit",
        "operationId": "run_flux1_schnell_8bit",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_flux1_schnell_8bit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/stable_cascade": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Stable Cascade",
        "operationId": "run_stable_cascade",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_stable_cascade"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/sketch_pencil": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Sketch Pencil",
        "operationId": "run_sketch_pencil",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_sketch_pencil"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/sd3_5_medium": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Sd3 5 Medium",
        "operationId": "run_sd3_5_medium",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_sd3_5_medium"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/memoji_portrait": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Memoji Portrait",
        "operationId": "run_memoji_portrait",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_memoji_portrait"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/playground_2_5_prometheus": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Playground 2 5 Prometheus",
        "operationId": "run_playground_2_5_prometheus",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_playground_2_5_prometheus"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/juggernaut_lite": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Juggernaut Lite",
        "operationId": "run_juggernaut_lite",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_juggernaut_lite"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/sd3_5_large": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Sd3 5 Large",
        "operationId": "run_sd3_5_large",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_sd3_5_large"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/hunyuan_dit": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Hunyuan Dit",
        "operationId": "run_hunyuan_dit",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_hunyuan_dit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/photo_stickers": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Photo Stickers",
        "operationId": "run_photo_stickers",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_photo_stickers"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/playground_2_5_aesthetic": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Playground 2 5 Aesthetic",
        "operationId": "run_playground_2_5_aesthetic",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_playground_2_5_aesthetic"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/ghibli_portrait": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Ghibli Portrait",
        "operationId": "run_ghibli_portrait",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_ghibli_portrait"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/auraflow": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Auraflow",
        "operationId": "run_auraflow",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_auraflow"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "TaskDetailsOutput": {
        "properties": {
          "comfy_node_id": {
            "type": "integer",
            "title": "Comfy Node Id",
            "description": "ID of the ComfyUI node containing the result."
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Type of the result from the ComfyUI node - can be either 'image', 'image-mask', 'image-animated', 'video' or 'audio'."
          },
          "file_size": {
            "type": "integer",
            "title": "File Size",
            "description": "Size of file(s) in bytes.",
            "default": -1
          },
          "batch_size": {
            "type": "integer",
            "title": "Batch Size",
            "description": "Count of outputs(files) produced by node.",
            "default": -1
          }
        },
        "type": "object",
        "required": [
          "comfy_node_id",
          "type"
        ],
        "title": "TaskDetailsOutput",
        "description": "Contains information for retrieving the results of a ComfyUI workflow."
      },
      "TaskRunResults": {
        "properties": {
          "tasks_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Tasks Ids",
            "description": "List of IDs representing the tasks that were created."
          },
          "outputs": {
            "items": {
              "$ref": "#/components/schemas/TaskDetailsOutput"
            },
            "type": "array",
            "title": "Outputs",
            "description": "List of outputs for the created tasks."
          }
        },
        "type": "object",
        "required": [
          "tasks_ids",
          "outputs"
        ],
        "title": "TaskRunResults"
      },
      "TaskRun_all_your_life": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "person_face": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face",
            "description": "Person's face"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "Smiling character in a White Shirt\uff0cSmile\uff0clooking at viewer"
          },
          "similarity_level": {
            "type": "number",
            "multipleOf": 0.01,
            "maximum": 0.5,
            "minimum": 0.25,
            "title": "Similarity Level",
            "description": "Level of similarity",
            "default": 0.37
          },
          "vision_provider": {
            "type": "boolean",
            "title": "Vision Provider",
            "description": "Use Gemini instead of Ollama",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "person_face"
        ],
        "title": "TaskRun_all_your_life"
      },
      "TaskRun_animagine_xl": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "1girl, elfen lied, pug, throne, night, masterpiece, high score, great score, absurdres"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt",
            "default": "lowres, bad anatomy, bad hands, text, error, missing finger, extra digits, fewer digits, cropped, worst quality, low quality, low score, bad score, average score, signature, watermark, username, blurry"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 40.0,
            "minimum": 25.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 28
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 7.0,
            "minimum": 4.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 4.5
          }
        },
        "type": "object",
        "title": "TaskRun_animagine_xl"
      },
      "TaskRun_animal_clothing": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "person_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Image",
            "description": "Person or animal"
          },
          "image_of_clothes": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Image Of Clothes",
            "description": "Image of clothes"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "2:3 (832x1216)"
          },
          "vision_provider": {
            "type": "boolean",
            "title": "Vision Provider",
            "description": "Use Gemini for vision instead of Ollama",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "person_image",
          "image_of_clothes"
        ],
        "title": "TaskRun_animal_clothing"
      },
      "TaskRun_auraflow": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "solo majestic wild cat, ethereal ambiance, symmetrical eyes, detailed background, photorealistic, ultra-realistic, 8k, artistic creativity, dreamlike textures"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "vibrancy": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 5.0,
            "minimum": 2.0,
            "title": "Vibrancy",
            "description": "Vibrancy",
            "default": 3.5
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 20
          }
        },
        "type": "object",
        "title": "TaskRun_auraflow"
      },
      "TaskRun_colorful_xl": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "fast_run": {
            "type": "boolean",
            "title": "Fast Run",
            "description": "Fast Run",
            "default": false
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "vibrancy": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 4.5,
            "minimum": 1.0,
            "title": "Vibrancy",
            "description": "Vibrancy",
            "default": 1
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 30.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 45
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_colorful_xl"
      },
      "TaskRun_colorful_xl_inpaint": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "source_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Source Image",
            "description": "Image to redraw"
          },
          "mask_redraw": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Mask Redraw",
            "description": "Mask to redraw"
          },
          "mask_context": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Mask Context",
            "description": "Context to include"
          },
          "fast_run": {
            "type": "boolean",
            "title": "Fast Run",
            "description": "Fast Run",
            "default": true
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "vibrancy": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 4.5,
            "minimum": 1.0,
            "title": "Vibrancy",
            "description": "Vibrancy",
            "default": 1
          },
          "denoise": {
            "type": "number",
            "multipleOf": 0.01,
            "maximum": 1.0,
            "minimum": 0.1,
            "title": "Denoise",
            "description": "Replacing factor",
            "default": 0.5
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 30.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 45
          }
        },
        "type": "object",
        "required": [
          "source_image",
          "mask_redraw",
          "prompt"
        ],
        "title": "TaskRun_colorful_xl_inpaint"
      },
      "TaskRun_comicu_portrait": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "person_face": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face",
            "description": "Person's face"
          },
          "person_pose": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Pose",
            "description": "Person's face pose"
          },
          "in_param_396": {
            "type": "string",
            "enum": [
              "girl",
              "boy",
              "man",
              "woman"
            ],
            "title": "In Param 396",
            "description": "Base gender",
            "default": "girl"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "vibrancy": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 10.0,
            "minimum": 3.0,
            "title": "Vibrancy",
            "description": "Vibrancy",
            "default": 7
          },
          "in_param_410": {
            "type": "boolean",
            "title": "In Param 410",
            "description": "Simplified Detailing",
            "default": false
          },
          "simplest_lora_strenth": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 1.0,
            "minimum": 0.1,
            "title": "Simplest Lora Strenth",
            "description": "Simplify Style effect strength",
            "default": 0.5
          }
        },
        "type": "object",
        "required": [
          "person_face"
        ],
        "title": "TaskRun_comicu_portrait"
      },
      "TaskRun_flux1_dev": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "loras_in_param_39": {
            "type": "number",
            "multipleOf": 0.01,
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Loras In Param 39",
            "description": "Realism LoRa strength",
            "default": 1.0
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 50.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 25
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_flux1_dev"
      },
      "TaskRun_flux1_dev_8bit": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "loras_in_param_35": {
            "type": "number",
            "multipleOf": 0.01,
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Loras In Param 35",
            "description": "Realism LoRa strength",
            "default": 1.0
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 50.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 25
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_flux1_dev_8bit"
      },
      "TaskRun_flux1_dev_inpaint": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "source_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Source Image",
            "description": "Image to redraw"
          },
          "mask_redraw": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Mask Redraw",
            "description": "Mask to redraw"
          },
          "mask_context": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Mask Context",
            "description": "Context to include"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "denoise": {
            "type": "number",
            "multipleOf": 0.01,
            "maximum": 1.0,
            "minimum": 0.1,
            "title": "Denoise",
            "description": "Replacing factor",
            "default": 0.9
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 20
          }
        },
        "type": "object",
        "required": [
          "source_image",
          "mask_redraw"
        ],
        "title": "TaskRun_flux1_dev_inpaint"
      },
      "TaskRun_flux1_dev_inpaint_8bit": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "source_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Source Image",
            "description": "Image to redraw"
          },
          "mask_redraw": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Mask Redraw",
            "description": "Mask to redraw"
          },
          "mask_context": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Mask Context",
            "description": "Context to include"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "denoise": {
            "type": "number",
            "multipleOf": 0.01,
            "maximum": 1.0,
            "minimum": 0.1,
            "title": "Denoise",
            "description": "Replacing factor",
            "default": 0.9
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 20
          }
        },
        "type": "object",
        "required": [
          "source_image",
          "mask_redraw"
        ],
        "title": "TaskRun_flux1_dev_inpaint_8bit"
      },
      "TaskRun_flux1_extend": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "source_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Source Image",
            "description": "Image to outpaint"
          },
          "extend_width": {
            "type": "number",
            "multipleOf": 64.0,
            "maximum": 512.0,
            "minimum": 0.0,
            "title": "Extend Width",
            "description": "Extend width",
            "default": 64
          },
          "extend_height": {
            "type": "number",
            "multipleOf": 64.0,
            "maximum": 512.0,
            "minimum": 0.0,
            "title": "Extend Height",
            "description": "Extend height",
            "default": 64
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 35
          },
          "in_param_80": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 99.0,
            "minimum": 1.0,
            "title": "In Param 80",
            "description": "Guidance",
            "default": 10
          },
          "in_param_84": {
            "type": "string",
            "enum": [
              "fp16",
              "fp8_e4m3fn",
              "fp8_e4m3fn_fast",
              "fp8_e5m2"
            ],
            "title": "In Param 84",
            "description": "Diffusion precision",
            "default": "fp8_e4m3fn"
          }
        },
        "type": "object",
        "required": [
          "source_image"
        ],
        "title": "TaskRun_flux1_extend"
      },
      "TaskRun_flux1_schnell": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_flux1_schnell"
      },
      "TaskRun_flux1_schnell_8bit": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_flux1_schnell_8bit"
      },
      "TaskRun_flux1_schnell_inpaint_8bit": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "source_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Source Image",
            "description": "Image to redraw"
          },
          "mask_redraw": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Mask Redraw",
            "description": "Mask to redraw"
          },
          "mask_context": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Mask Context",
            "description": "Context to include"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "denoise": {
            "type": "number",
            "multipleOf": 0.01,
            "maximum": 1.0,
            "minimum": 0.1,
            "title": "Denoise",
            "description": "Replacing factor",
            "default": 0.9
          }
        },
        "type": "object",
        "required": [
          "source_image",
          "mask_redraw"
        ],
        "title": "TaskRun_flux1_schnell_inpaint_8bit"
      },
      "TaskRun_ghibli_portrait": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "person_face": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face",
            "description": "Person's face"
          },
          "person_pose": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Pose",
            "description": "Person's face pose"
          },
          "gender": {
            "type": "string",
            "enum": [
              "girl",
              "boy",
              "man",
              "woman"
            ],
            "title": "Gender",
            "description": "Base gender",
            "default": "girl"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          }
        },
        "type": "object",
        "required": [
          "person_face"
        ],
        "title": "TaskRun_ghibli_portrait"
      },
      "TaskRun_human_face_detailer": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "person_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Image",
            "description": "Image with people"
          }
        },
        "type": "object",
        "required": [
          "person_image"
        ],
        "title": "TaskRun_human_face_detailer"
      },
      "TaskRun_hunyuan_dit": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt"
          },
          "vibrancy": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 15.0,
            "minimum": 2.0,
            "title": "Vibrancy",
            "description": "Vibrancy",
            "default": 6
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 30
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_hunyuan_dit"
      },
      "TaskRun_juggernaut_lite": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt",
            "default": "asian, child, penis, embedding:ng_deepnegative_v1_75t, embedding:negative_hand-neg,  (worst quality, low quality:2), lowres, bad anatomy, normal quality, monochrome, grayscale, ((signature, text, watermark))"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "2:3 (832x1216)"
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_juggernaut_lite"
      },
      "TaskRun_juggernaut_xl": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt",
            "default": "embedding:ng_deepnegative_v1_75t, embedding:negative_hand-neg,  (worst quality, low quality:2), lowres, bad anatomy, normal quality, monochrome, grayscale, ((signature, text, watermark))"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "2:3 (832x1216)"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 30.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 50
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 7.0,
            "minimum": 4.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 4
          },
          "fast_run": {
            "type": "boolean",
            "title": "Fast Run",
            "description": "Fast run",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_juggernaut_xl"
      },
      "TaskRun_ltxv_txt2video": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "A woman with long brown hair and light skin smiles at another woman with long blonde hair. The woman with brown hair wears a black jacket and has a small, barely noticeable mole on her right cheek. The camera angle is a close-up, focused on the woman with brown hair's face. The lighting is warm and natural, likely from the setting sun, casting a soft glow on the scene. The scene appears to be real-life footage."
          }
        },
        "type": "object",
        "title": "TaskRun_ltxv_txt2video"
      },
      "TaskRun_mad_scientist": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "person_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Image",
            "description": "Person's face"
          },
          "style_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Style Image",
            "description": "Style"
          },
          "vision_provider": {
            "type": "boolean",
            "title": "Vision Provider",
            "description": "Use Gemini for vision instead of Ollama",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "person_image",
          "style_image"
        ],
        "title": "TaskRun_mad_scientist"
      },
      "TaskRun_memoji_portrait": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "person_face": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face",
            "description": "Person's face"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "girl, portrait, close up"
          },
          "person_pose": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Pose",
            "description": "Person's face pose"
          }
        },
        "type": "object",
        "required": [
          "person_face"
        ],
        "title": "TaskRun_memoji_portrait"
      },
      "TaskRun_mobius_xl": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 50
          },
          "fast_run": {
            "type": "boolean",
            "title": "Fast Run",
            "description": "Fast run",
            "default": false
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 7.0,
            "minimum": 3.5,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 5
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_mobius_xl"
      },
      "TaskRun_pencil_sketch_portrait": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "person_face": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face",
            "description": "Person's face"
          },
          "vision_provider": {
            "type": "boolean",
            "title": "Vision Provider",
            "description": "Use Gemini instead of Ollama",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "person_face"
        ],
        "title": "TaskRun_pencil_sketch_portrait"
      },
      "TaskRun_photo_stickers": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "person_face": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face",
            "description": "Person's face"
          },
          "gender": {
            "type": "string",
            "enum": [
              "girl",
              "boy",
              "man",
              "woman"
            ],
            "title": "Gender",
            "description": "Base gender",
            "default": "boy"
          }
        },
        "type": "object",
        "required": [
          "person_face"
        ],
        "title": "TaskRun_photo_stickers"
      },
      "TaskRun_photo_stickers2": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "person_face": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face",
            "description": "Person's face"
          },
          "prompt1": {
            "type": "string",
            "title": "Prompt1",
            "description": "Fisrt Sticker Prompt",
            "default": "Boxers, with red boxing gloves, swinging their fists"
          },
          "prompt2": {
            "type": "string",
            "title": "Prompt2",
            "description": "Second Sticker Prompt",
            "default": "Dressed in a Superman costume"
          },
          "prompt3": {
            "type": "string",
            "title": "Prompt3",
            "description": "Third Sticker Prompt",
            "default": "Dress up as Santa Claus with a rattle in your hand"
          },
          "prompt4": {
            "type": "string",
            "title": "Prompt4",
            "description": "Fourth Sticker Prompt",
            "default": "Holding a bouquet of roses in his hand and wearing a gown"
          },
          "vision_provider": {
            "type": "boolean",
            "title": "Vision Provider",
            "description": "Use Gemini for vision instead of Ollama",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "person_face"
        ],
        "title": "TaskRun_photo_stickers2"
      },
      "TaskRun_photomaker_1": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "person_face": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face",
            "description": "Person's face"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "portrait of girl"
          },
          "style": {
            "type": "string",
            "enum": [
              "Cinematic",
              "Disney Character",
              "Digital Art",
              "Photographic",
              "Fantasy art",
              "Neonpunk",
              "Comic book",
              "Lowpoly",
              "Line art"
            ],
            "title": "Style",
            "description": "Photo Style",
            "default": "Cinematic"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt"
          },
          "accuracy": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 0.5,
            "minimum": 0.1,
            "title": "Accuracy",
            "description": "Freedom of outcome",
            "default": 0.3
          }
        },
        "type": "object",
        "required": [
          "person_face"
        ],
        "title": "TaskRun_photomaker_1"
      },
      "TaskRun_photomaker_2": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "person_face1": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face1",
            "description": "Person's face"
          },
          "person_face2": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face2",
            "description": "Person's face"
          },
          "person_face3": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face3",
            "description": "Person's face"
          },
          "person_face4": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face4",
            "description": "Person's face"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "portrait of a girl"
          },
          "in_param_235": {
            "type": "string",
            "enum": [
              "(No style)",
              "Cinematic",
              "Disney Charactor",
              "Digital Art",
              "Photographic (Default)",
              "Fantasy art",
              "Neonpunk",
              "Enhance",
              "Line art"
            ],
            "title": "In Param 235",
            "description": "PhotoMaker Style",
            "default": "Photographic (Default)"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt",
            "default": "asymmetry, worst quality, low quality, illustration, 3d, 2d, painting, cartoons, sketch, open mouth"
          },
          "accuracy": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 0.5,
            "minimum": 0.1,
            "title": "Accuracy",
            "description": "Freedom of outcome",
            "default": 0.2
          }
        },
        "type": "object",
        "required": [
          "person_face1",
          "person_face2"
        ],
        "title": "TaskRun_photomaker_2"
      },
      "TaskRun_pixart_e": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "drawing of a tank with a (blue:0.8) camo pattern"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt"
          },
          "vibrancy": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 5.0,
            "minimum": 3.0,
            "title": "Vibrancy",
            "description": "Vibrancy",
            "default": 4.5
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 20
          },
          "in_param_197": {
            "type": "string",
            "enum": [
              "default",
              "fp8_e4m3fn",
              "fp8_e4m3fn_fast",
              "fp8_e5m2"
            ],
            "title": "In Param 197",
            "description": "Diffusion precision",
            "default": "default"
          }
        },
        "type": "object",
        "title": "TaskRun_pixart_e"
      },
      "TaskRun_playground_2_5_aesthetic": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "3:2 (1216x832)"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 30.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 50
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 5.0,
            "minimum": 3.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 3
          },
          "fast_run": {
            "type": "boolean",
            "title": "Fast Run",
            "description": "Fast run",
            "default": false
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_playground_2_5_aesthetic"
      },
      "TaskRun_playground_2_5_prometheus": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 50.0,
            "minimum": 25.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 40
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 8.0,
            "minimum": 6.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 7
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_playground_2_5_prometheus"
      },
      "TaskRun_proteus_xl": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 50.0,
            "minimum": 25.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 40
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 8.0,
            "minimum": 6.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 7
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_proteus_xl"
      },
      "TaskRun_realvis_xl": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "portrait, masterpiece, 4k, ray tracing, intricate details, highly detailed, hyper realistic, 8k RAW editorial photo. an adorable lynx , head with a tilt and a slight blink. The lynx is feathers should be soft and fluffy, the background should be a snowy forest, dramatic light, shallow depth of field, high budget"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt",
            "default": "bad hands, bad anatomy, ugly, deformed, (face asymmetry, eyes asymmetry, deformed eyes, deformed mouth, open mouth)"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 25.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 30
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 7.0,
            "minimum": 2.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 3
          }
        },
        "type": "object",
        "title": "TaskRun_realvis_xl"
      },
      "TaskRun_remove_background_birefnet": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "input_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Input Image",
            "description": "Input image"
          }
        },
        "type": "object",
        "required": [
          "input_image"
        ],
        "title": "TaskRun_remove_background_birefnet"
      },
      "TaskRun_remove_background_birefnet_lite": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "input_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Input Image",
            "description": "Input image"
          }
        },
        "type": "object",
        "required": [
          "input_image"
        ],
        "title": "TaskRun_remove_background_birefnet_lite"
      },
      "TaskRun_remove_background_bria": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "input_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Input Image",
            "description": "Input image"
          }
        },
        "type": "object",
        "required": [
          "input_image"
        ],
        "title": "TaskRun_remove_background_bria"
      },
      "TaskRun_sd3_5_large": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "a close-up half-portrait photo of a woman wearing a sleek blue and white summer dress with a monstera plant motif,  red braided hair, she is on Brighton pebble beach UK, west pier behind her, early in the morning, seagulls flying overhead, focus on face"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "3:4 (896x1152)"
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 6.0,
            "minimum": 2.5,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 4.5
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 20
          }
        },
        "type": "object",
        "title": "TaskRun_sd3_5_large"
      },
      "TaskRun_sd3_5_large_8bit": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "a close-up half-portrait photo of a woman wearing a sleek blue and white summer dress with a monstera plant motif,  red braided hair, she is on Brighton pebble beach UK, west pier behind her, early in the morning, seagulls flying overhead, focus on face"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "3:4 (896x1152)"
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 6.0,
            "minimum": 2.5,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 4.5
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 20
          }
        },
        "type": "object",
        "title": "TaskRun_sd3_5_large_8bit"
      },
      "TaskRun_sd3_5_medium": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "a close-up half-portrait photo of a woman wearing a sleek blue and white summer dress with a monstera plant motif,  red braided hair, she is on Brighton pebble beach UK, west pier behind her, early in the morning, seagulls flying overhead, focus on face"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "3:4 (896x1152)"
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 6.0,
            "minimum": 2.5,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 4.5
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt",
            "default": "ugly"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 20
          }
        },
        "type": "object",
        "title": "TaskRun_sd3_5_medium"
      },
      "TaskRun_sdxl_lighting": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "steps_number": {
            "type": "string",
            "enum": [
              "4 steps",
              "8 steps"
            ],
            "title": "Steps Number",
            "description": "Number of steps",
            "default": "8 steps"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt",
            "default": "ugly"
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_sdxl_lighting"
      },
      "TaskRun_sketch_pencil": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "a monochromatic pencil sketch of a ragdoll cat, blue eyes, impressionism, negative space"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "3:4 (896x1152)"
          },
          "pencil_lora_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Pencil Lora Strength",
            "description": "Pencil LoRa strength",
            "default": 1
          }
        },
        "type": "object",
        "title": "TaskRun_sketch_pencil"
      },
      "TaskRun_sketch_portrait": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "person_face": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face",
            "description": "Person's face"
          },
          "person_pose": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Pose",
            "description": "Person's face pose"
          },
          "in_param_397": {
            "type": "string",
            "enum": [
              "girl",
              "boy",
              "man",
              "woman"
            ],
            "title": "In Param 397",
            "description": "Base gender",
            "default": "girl"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "vibrancy": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 10.0,
            "minimum": 3.0,
            "title": "Vibrancy",
            "description": "Vibrancy",
            "default": 5
          }
        },
        "type": "object",
        "required": [
          "person_face"
        ],
        "title": "TaskRun_sketch_portrait"
      },
      "TaskRun_stable_audio_open": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "116 BPM rock drums loop clean production"
          },
          "length": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 47.0,
            "minimum": 3.0,
            "title": "Length",
            "description": "Length(in seconds)",
            "default": 22
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 8.0,
            "minimum": 5.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 7
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 120.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 100
          }
        },
        "type": "object",
        "title": "TaskRun_stable_audio_open"
      },
      "TaskRun_stable_cascade": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "pass_count": {
            "type": "string",
            "enum": [
              "One pass",
              "Two pass",
              "Three pass"
            ],
            "title": "Pass Count",
            "description": "Pass count",
            "default": "Two pass"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt"
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_stable_cascade"
      },
      "TaskRun_supir_upscaler": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "image_to_upscale": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Image To Upscale",
            "description": "Image to upscale"
          },
          "scale_factor": {
            "type": "string",
            "title": "Scale Factor",
            "description": "Output image size factor",
            "default": 2
          },
          "in_param_117": {
            "type": "string",
            "enum": [
              "fp16",
              "bf16",
              "fp32",
              "auto"
            ],
            "title": "In Param 117",
            "description": "Diffusion Type(set to \"fp32\" on macOS)",
            "default": "auto"
          },
          "in_param_125": {
            "type": "string",
            "enum": [
              "Soft",
              "Sharp",
              "Soft, disabled tiling(for small images)",
              "Sharp, disabled tiling(for small images)"
            ],
            "title": "In Param 125",
            "description": "Scaling option",
            "default": "Soft"
          },
          "in_param_138": {
            "type": "boolean",
            "title": "In Param 138",
            "description": "Low memory mode",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "image_to_upscale"
        ],
        "title": "TaskRun_supir_upscaler"
      },
      "TaskRun_surprise_me_internal": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "text_provider": {
            "type": "boolean",
            "title": "Text Provider",
            "description": "Use Gemini instead of Ollama",
            "default": true
          }
        },
        "type": "object",
        "title": "TaskRun_surprise_me_internal"
      },
      "TaskRun_vintage_portrait": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "person_face": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face",
            "description": "Person's face"
          },
          "person_pose": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Pose",
            "description": "Person's face pose"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "portrait of a girl, cinematic,  masterpiece"
          }
        },
        "type": "object",
        "required": [
          "person_face"
        ],
        "title": "TaskRun_vintage_portrait"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:8288",
      "description": "Default server running Visionatrix"
    }
  ]
}
